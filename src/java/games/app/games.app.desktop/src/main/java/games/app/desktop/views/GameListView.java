package games.app.desktop.views;

import games.app.desktop.controllers.GameListController;
import games.util.desktopapp.MessageDialogHandler;
import gustav.games.models.abstracts.AbstractGame;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JList;

/**
 * Game List View.
 * @author Gustavo
 */
public class GameListView extends javax.swing.JPanel {
    private GameListController gameListController;
    private String[] gameList;
    
    public JList getListofGames(){
        return jList1;
    }
    
    /**
     * Creates new form GameListPanels
     */
    public GameListView(GameListController gameListController) {
        this.gameListController = gameListController;
        List<AbstractGame> games = gameListController.getGameList();
        gameList = new String[games.size()];
        for(int i=0;i<games.size()
                ;i++){
            gameList[i] = games.get(i).getGameName();
        }

        initComponents();
        
        /*this.setFocusable(true);
        this.grabFocus();
        this.requestFocus();*/

        jList1.setSelectedIndex(0);
        //jList1.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList(gameList);
        jButton1 = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Select your game:");

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jList1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jList1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Load");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jButton1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER && jList1.getSelectedValues().length == 1){
            gameListController.loadGame(jList1.getSelectedValue());
        }
        else if(evt.getKeyCode() == KeyEvent.VK_ENTER && jList1.getSelectedValues().length != 1){
            MessageDialogHandler.alertMessage(this, "You can select just one game to load", "Error");
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void jList1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyTyped
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            //evt.consume();
            jList1.setSelectedIndex(jList1.getSelectedIndex()+1);
            System.out.println("OK");
        }
    }//GEN-LAST:event_jList1KeyTyped

    private void jList1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jList1AncestorAdded
        this.setFocusable(true);
        this.requestFocus(true);
        //this.requestFocus();
        this.grabFocus();
    }//GEN-LAST:event_jList1AncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(jList1.getSelectedValues().length == 1){
            gameListController.loadGame(jList1.getSelectedValue());
        }
        else if(jList1.getSelectedValues().length == 0){
            MessageDialogHandler.alertMessage(this, "You have to select a game before pressing the 'Load' button", "Information");
        }
        else{
            MessageDialogHandler.alertMessage(this, "You can select just one game to load", "Error");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if(jList1.getSelectedValues().length == 1 && evt.getClickCount() == 2){
            gameListController.loadGame(jList1.getSelectedValue());
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        jList1.setFocusable(true);
        //jList1.grabFocus();
        jList1.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
